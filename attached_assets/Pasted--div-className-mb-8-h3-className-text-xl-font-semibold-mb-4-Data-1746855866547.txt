 <>
            <div className="mb-8">
              <h3 className="text-xl font-semibold mb-4">Data Analysis</h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="bg-white p-6 rounded-lg shadow-md">
                  <h4 className="text-lg font-medium mb-3">Dataset Info</h4>
                  <pre className="text-sm bg-gray-50 p-4 rounded overflow-auto">
                    {info}
                  </pre>
                </div>
                
                <div className="bg-white p-6 rounded-lg shadow-md">
                  <h4 className="text-lg font-medium mb-3">Null Value Counts</h4>
                  <div className="space-y-2">
                    {Object.entries(nullCounts || {}).map(([col, count]) => (
                      <div key={col} className="flex justify-between">
                        <span>{col}:</span>
                        <span className={count > 0 ? 'text-red-500' : 'text-green-500'}>
                          {count}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>

            <h3 className="text-xl font-semibold mb-4">Data Preview (First 10 Records)</h3>
            <div className="overflow-auto max-h-[500px] border border-gray-300 rounded-lg">
            <table className="min-w-full table-auto text-sm">
              <thead className="bg-gray-200 sticky top-0 z-10">
                <tr>
                  {Object.keys(fileRecords[0]).map((key) => (
                    <th key={key} className="border px-4 py-2 text-left">{key}</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {fileRecords.map((row, rowIndex) => (
                  <tr key={rowIndex} className="even:bg-gray-50">
                    {Object.values(row).map((value, colIndex) => (
                      <td key={colIndex} className="border px-4 py-1 whitespace-nowrap">
                        {typeof value === 'string' && value.length > 60
                          ? value.slice(0, 60) + '...'
                          : value}
                      </td>
                    ))}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        ) : (
          <p className="text-sm text-gray-500 mt-4">No records to display.</p>
        )}
      </section>
      <button
  onClick={async () => {
    const response = await fetch('/analyze');
    if (response.ok) {
      const data = await response.json();
      if (data.images && data.images.length > 0) {
        navigate('/analyze');
      } else {
        alert('No statistics were generated. Please upload a file first.');
      }

      // Navigate to analysis page
    } else {
      alert('Failed to generate statistics');
    }
  }}
  className="mt-6 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"
>
  Generate Statistics
</button>
